{"version":3,"file":"js/vendors/floating-ui.e9b2c49c6349af827506.js","mappings":"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","sources":["webpack://webpack-react-typescript-template/./node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://webpack-react-typescript-template/./node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://webpack-react-typescript-template/./node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","webpack://webpack-react-typescript-template/./node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://webpack-react-typescript-template/./node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs"],"sourcesContent":["/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","import { rectToClientRect, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { detectOverflow, offset } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getContainingBlock, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction topLayer(floating) {\n  let isTopLayer = false;\n  let x = 0;\n  let y = 0;\n  function setIsTopLayer(selector) {\n    try {\n      isTopLayer = isTopLayer || floating.matches(selector);\n    } catch (e) {}\n  }\n  topLayerSelectors.forEach(selector => {\n    setIsTopLayer(selector);\n  });\n  if (isTopLayer) {\n    const containingBlock = getContainingBlock(floating);\n    if (containingBlock) {\n      const rect = containingBlock.getBoundingClientRect();\n      x = rect.x;\n      y = rect.y;\n    }\n  }\n  return [isTopLayer, x, y];\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const documentElement = getDocumentElement(offsetParent);\n  const [isTopLayer] = elements ? topLayer(elements.floating) : [false];\n  if (offsetParent === documentElement || isTopLayer) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy, floating) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  let x = rect.left + scroll.scrollLeft - offsets.x;\n  let y = rect.top + scroll.scrollTop - offsets.y;\n  const [isTopLayer, topLayerX, topLayerY] = topLayer(floating);\n  if (isTopLayer) {\n    x += topLayerX;\n    y += topLayerY;\n    if (isOffsetParentAnElement) {\n      x += offsetParent.clientLeft;\n      y += offsetParent.clientTop;\n    }\n  }\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy, data.floating),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(data.floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, inline, limitShift, platform, shift, size };\n","import { arrow as arrow$1, computePosition } from '@floating-ui/dom';\nexport { autoPlacement, autoUpdate, computePosition, detectOverflow, flip, getOverflowAncestors, hide, inline, limitShift, offset, platform, shift, size } from '@floating-ui/dom';\nimport * as React from 'react';\nimport { useLayoutEffect, useEffect } from 'react';\nimport * as ReactDOM from 'react-dom';\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * This wraps the core `arrow` middleware to allow React refs as the element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => {\n  function isRef(value) {\n    return {}.hasOwnProperty.call(value, 'current');\n  }\n  return {\n    name: 'arrow',\n    options,\n    fn(state) {\n      const {\n        element,\n        padding\n      } = typeof options === 'function' ? options(state) : options;\n      if (element && isRef(element)) {\n        if (element.current != null) {\n          return arrow$1({\n            element: element.current,\n            padding\n          }).fn(state);\n        }\n        return {};\n      }\n      if (element) {\n        return arrow$1({\n          element,\n          padding\n        }).fn(state);\n      }\n      return {};\n    }\n  };\n};\n\nvar index = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\n// Fork of `fast-deep-equal` that only does the comparisons we need and compares\n// functions\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (typeof a === 'function' && a.toString() === b.toString()) {\n    return true;\n  }\n  let length;\n  let i;\n  let keys;\n  if (a && b && typeof a === 'object') {\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length !== b.length) return false;\n      for (i = length; i-- !== 0;) {\n        if (!deepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0;) {\n      if (!{}.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        continue;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // biome-ignore lint/suspicious/noSelfCompare: in source\n  return a !== a && b !== b;\n}\n\nfunction getDPR(element) {\n  if (typeof window === 'undefined') {\n    return 1;\n  }\n  const win = element.ownerDocument.defaultView || window;\n  return win.devicePixelRatio || 1;\n}\n\nfunction roundByDPR(element, value) {\n  const dpr = getDPR(element);\n  return Math.round(value * dpr) / dpr;\n}\n\nfunction useLatestRef(value) {\n  const ref = React.useRef(value);\n  index(() => {\n    ref.current = value;\n  });\n  return ref;\n}\n\n/**\n * Provides data to position a floating element.\n * @see https://floating-ui.com/docs/useFloating\n */\nfunction useFloating(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform,\n    elements: {\n      reference: externalReference,\n      floating: externalFloating\n    } = {},\n    transform = true,\n    whileElementsMounted,\n    open\n  } = options;\n  const [data, setData] = React.useState({\n    x: 0,\n    y: 0,\n    strategy,\n    placement,\n    middlewareData: {},\n    isPositioned: false\n  });\n  const [latestMiddleware, setLatestMiddleware] = React.useState(middleware);\n  if (!deepEqual(latestMiddleware, middleware)) {\n    setLatestMiddleware(middleware);\n  }\n  const [_reference, _setReference] = React.useState(null);\n  const [_floating, _setFloating] = React.useState(null);\n  const setReference = React.useCallback(node => {\n    if (node !== referenceRef.current) {\n      referenceRef.current = node;\n      _setReference(node);\n    }\n  }, []);\n  const setFloating = React.useCallback(node => {\n    if (node !== floatingRef.current) {\n      floatingRef.current = node;\n      _setFloating(node);\n    }\n  }, []);\n  const referenceEl = externalReference || _reference;\n  const floatingEl = externalFloating || _floating;\n  const referenceRef = React.useRef(null);\n  const floatingRef = React.useRef(null);\n  const dataRef = React.useRef(data);\n  const hasWhileElementsMounted = whileElementsMounted != null;\n  const whileElementsMountedRef = useLatestRef(whileElementsMounted);\n  const platformRef = useLatestRef(platform);\n  const update = React.useCallback(() => {\n    if (!referenceRef.current || !floatingRef.current) {\n      return;\n    }\n    const config = {\n      placement,\n      strategy,\n      middleware: latestMiddleware\n    };\n    if (platformRef.current) {\n      config.platform = platformRef.current;\n    }\n    computePosition(referenceRef.current, floatingRef.current, config).then(data => {\n      const fullData = {\n        ...data,\n        isPositioned: true\n      };\n      if (isMountedRef.current && !deepEqual(dataRef.current, fullData)) {\n        dataRef.current = fullData;\n        ReactDOM.flushSync(() => {\n          setData(fullData);\n        });\n      }\n    });\n  }, [latestMiddleware, placement, strategy, platformRef]);\n  index(() => {\n    if (open === false && dataRef.current.isPositioned) {\n      dataRef.current.isPositioned = false;\n      setData(data => ({\n        ...data,\n        isPositioned: false\n      }));\n    }\n  }, [open]);\n  const isMountedRef = React.useRef(false);\n  index(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: `hasWhileElementsMounted` is intentionally included.\n  index(() => {\n    if (referenceEl) referenceRef.current = referenceEl;\n    if (floatingEl) floatingRef.current = floatingEl;\n    if (referenceEl && floatingEl) {\n      if (whileElementsMountedRef.current) {\n        return whileElementsMountedRef.current(referenceEl, floatingEl, update);\n      }\n      update();\n    }\n  }, [referenceEl, floatingEl, update, whileElementsMountedRef, hasWhileElementsMounted]);\n  const refs = React.useMemo(() => ({\n    reference: referenceRef,\n    floating: floatingRef,\n    setReference,\n    setFloating\n  }), [setReference, setFloating]);\n  const elements = React.useMemo(() => ({\n    reference: referenceEl,\n    floating: floatingEl\n  }), [referenceEl, floatingEl]);\n  const floatingStyles = React.useMemo(() => {\n    const initialStyles = {\n      position: strategy,\n      left: 0,\n      top: 0\n    };\n    if (!elements.floating) {\n      return initialStyles;\n    }\n    const x = roundByDPR(elements.floating, data.x);\n    const y = roundByDPR(elements.floating, data.y);\n    if (transform) {\n      return {\n        ...initialStyles,\n        transform: \"translate(\" + x + \"px, \" + y + \"px)\",\n        ...(getDPR(elements.floating) >= 1.5 && {\n          willChange: 'transform'\n        })\n      };\n    }\n    return {\n      position: strategy,\n      left: x,\n      top: y\n    };\n  }, [strategy, transform, elements.floating, data.x, data.y]);\n  return React.useMemo(() => ({\n    ...data,\n    update,\n    refs,\n    elements,\n    floatingStyles\n  }), [data, update, refs, elements, floatingStyles]);\n}\n\nexport { arrow, useFloating };\n"],"names":["round","createCoords","v","oppositeSideMap","oppositeAlignmentMap","start","value","end","param","placement","axis","rects","rtl","alignment","alignmentAxis","length","mainAlignmentSide","oppositePlacement","getSideList","side","isStart","lr","rl","tb","bt","flipAlignment","direction","list","expandPaddingObject","padding","rect","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","config","strategy","middleware","platform","validMiddleware","x","y","statefulPlacement","middlewareData","resetCount","i","name","fn","nextX","nextY","data","reset","detectOverflow","state","options","_await$platform$isEle","elements","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","offsetParent","offsetScale","elementClientRect","arrow","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","max","center","offset","shouldAddOffset","alignmentOffset","getPlacementList","autoAlignment","allowedPlacements","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","crossAxis","detectOverflowOptions","placements$1","overflow","currentIndex","currentPlacement","alignmentSides","currentOverflows","allOverflows","nextPlacement","placementsSortedByMostSpace","d","acc","a","b","resetPlacement","flip","_middlewareData$arrow","_middlewareData$flip","initialPlacement","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","isBasePlacement","fallbackPlacements","placements","overflows","overflowsData","sides","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","hide","offsets","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","nativeClientRects","clientRects","fallback","getBoundingClientRect","firstRect","lastRect","isTop","top","bottom","left","right","width","height","isLeftSide","maxRight","minLeft","measureRects","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","_middlewareData$offse","diffCoords","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","min","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","size","apply","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","getNodeName","node","isNode","getWindow","_node$ownerDocument","isElement","isHTMLElement","isShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle","isTableElement","isContainingBlock","webkit","isWebKit","css","getContainingBlock","currentNode","getParentNode","isLastTraversableNode","getNodeScroll","result","getNearestOverflowAncestor","parentNode","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","unwrapElement","getScale","domElement","$","noOffsets","getVisualOffsets","shouldAddVisualOffsets","isFixed","floatingOffsetParent","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","offsetWin","currentIFrame","iframeScale","iframeRect","topLayerSelectors","topLayer","isTopLayer","setIsTopLayer","selector","e","containingBlock","convertOffsetParentRelativeRectToViewportRelativeRect","documentElement","scroll","isOffsetParentAnElement","offsetRect","getClientRects","getWindowScrollBarX","getDocumentRect","html","body","getViewportRect","visualViewport","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","hasFixedPositionAncestor","stopNode","getClippingElementAncestors","cache","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingRect","clippingAncestors","firstClippingAncestor","clippingRect","accRect","getDimensions","getRectRelativeToOffsetParent","topLayerX","topLayerY","getTrueOffsetParent","polyfill","getOffsetParent","window","getElementRects","getOffsetParentFn","getDimensionsFn","isRTL","observeMove","onMove","io","timeoutId","root","cleanup","_io","refresh","skip","threshold","insetTop","insetRight","insetBottom","insetLeft","isFirstUpdate","handleObserve","entries","ratio","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","referenceEl","ancestors","cleanupIo","reobserveFrame","resizeObserver","firstEntry","_resizeObserver","frameId","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","mergedOptions","platformWithCache","isRef","index","deepEqual","keys","key","getDPR","roundByDPR","dpr","useLatestRef","ref","useFloating","externalReference","externalFloating","transform","whileElementsMounted","open","setData","latestMiddleware","setLatestMiddleware","_reference","_setReference","_floating","_setFloating","setReference","referenceRef","setFloating","floatingRef","floatingEl","dataRef","hasWhileElementsMounted","whileElementsMountedRef","platformRef","fullData","isMountedRef","refs","floatingStyles","initialStyles"],"sourceRoot":""}