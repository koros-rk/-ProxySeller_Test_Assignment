{"version":3,"file":"js/vendors/react-router-dom.7d21a72a0e9a977fe1c3.js","mappings":"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","sources":["webpack://webpack-react-typescript-template/./node_modules/react-router-dom/dist/index.js"],"sourcesContent":["/**\n * React Router DOM v6.21.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      unstable_flushSync: flushSync,\n      unstable_viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        unstable_flushSync: options.unstable_flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_flushSync: options.unstable_flushSync,\n        unstable_viewTransition: options.unstable_viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n"],"names":["_extends","target","i","source","key","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","isButtonElement","isFormElement","isInputElement","isModifiedEvent","event","shouldProcessLinkClick","createSearchParams","init","memo","value","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","_","_formDataSupportsSubmitter","isFormDataSubmitterSupported","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","basename","method","action","formData","body","attr","form","name","type","prefix","_excluded","_excluded2","_excluded3","createBrowserRouter","routes","opts","parseHydrationData","createHashRouter","_window","state","deserializeErrors","errors","entries","serialized","val","ErrorConstructor","error","e","ViewTransitionContext","FetchersContext","START_TRANSITION","startTransitionImpl","FLUSH_SYNC","flushSyncImpl","USE_ID","useIdImpl","startTransitionSafe","cb","flushSyncSafe","Deferred","resolve","reject","reason","RouterProvider","_ref","fallbackElement","router","future","setStateImpl","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","v7_startTransition","optInStartTransition","setState","newState","_ref2","deletedFetchers","flushSync","viewTransitionOpts","fetcher","isViewTransitionUnavailable","t","renderPromise","navigator","n","to","dataRouterContext","DataRoutes","_ref3","BrowserRouter","_ref4","children","window","historyRef","history","HashRouter","_ref5","HistoryRouter","_ref6","isBrowser","ABSOLUTE_URL_REGEX","Link","NavLink","Form","ScrollRestoration","_ref10","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","useDataRouterState","useLinkClickHandler","_temp","replaceProp","preventScrollReset","relative","unstable_viewTransition","navigate","location","path","replace","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","fetcherId","getUniqueFetcherId","useSubmit","currentRouteId","options","useFormAction","_temp2","routeContext","match","params","useFetcher","_temp3","_route$matches","route","routeId","defaultKey","fetcherKey","setFetcherKey","load","href","submitImpl","submit","FetcherForm","props","ref","data","useFetchers","_ref11","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp4","restoreScrollPosition","matches","navigation","usePageHide","sessionPositions","getKeyWithoutBasename","disableScrollRestoration","el","useBeforeUnload","callback","capture","usePrompt","_ref12","when","message","blocker","useViewTransitionState","currentPath","nextPath"],"sourceRoot":""}